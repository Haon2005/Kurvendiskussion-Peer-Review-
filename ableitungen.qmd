---
title: "Ableitungen berechnen"
format: html
filters:
  - pyodide
---
# Was sind Ableitungen?
Eine Ableitung ist eine Funktion, die den Differenzenquotienten bzw. die Steigung einer Funktion an jeder Stelle angibt. Für eine Ableitung sind nur nicht-konstante Werte relevant, da diese keinen Einfluss auf die Steigung haben können.  
Die allgemeinen Ableitungsregeln sollten Dir bekannt sein, aber falls sie vergessen wurden, folgt hier eine kurze Zusammenfassung.

# Allgemeine Ableitungsregeln
Mir ging es tat
Um Funktionen abzuleiten, gibt es grundlegende Regeln, die Du kennen solltest. Diese Regeln ermöglichen es Dir, fast jede Funktion abzuleiten, indem Du sie in kleinere, handhabbare Teile zerlegst.

Hier sind die wichtigsten allgemeinen Ableitungsregeln:

*   **Konstantenregel:**  
    Die Ableitung einer konstanten Funktion ist immer $0$,
    d.h.: $f(x) = c \implies f'(x) = 0$.

*   **Potenzregel:**  
    Für eine Funktion der Form $f(x) = x^n$, lautet die Ableitung:
    $f'(x) = n \cdot x^{n-1}$
    Wenn ein konstanter Faktor $c$ dabei ist: $f(x) = c \cdot x^n$, dann ist $f'(x) = c \cdot n \cdot x^{n-1}$.

*   **Summen- und Differenzregel:**  
    Die Ableitung einer Summe oder Differenz von Funktionen ist die Summe oder Differenz der Ableitungen dieser Funktionen.
    Wenn $f(x) = u(x) \pm v(x)$, dann ist $f'(x) = u'(x) \pm v'(x)$.

*   **Produktregel:**  
    Für ein Produkt aus zwei Funktionen $f(x) = u(x) \cdot v(x)$:
    $f'(x) = u'(x) \cdot v(x) + u(x) \cdot v'(x)$

*   **Kettenregel:**   
    Wenn eine Funktion aus einer Verkettung zweier Funktionen besteht (eine Funktion in einer anderen Funktion), $f(x) = u(v(x))$:
    $f'(x) = u'(v(x)) \cdot v'(x)$

*   **Quotientenregel:** 
    _Im Prinzip ist die Quotientenregel keine eigenständige Regel, sondern eine Folgerung aus der Produkt und der Kettenregel und wird daher hier nur kurz angeschnitten._
    Für einen Quotienten zweier Funktionen $f(x) = \frac{u(x)}{v(x)}$:
    $f'(x) = \frac{u'(x) \cdot v(x) - u(x) \cdot v'(x)}{(v(x))^2}$

## Spezifische Funktionen und ihre Ableitungen

Neben diesen allgemeinen Regeln gibt es bestimmte Funktionen, deren Ableitungen fest definiert sind und die du auswendig kennen solltest. Wenn diese Funktionen in Kombination mit anderen Termen auftreten, wendest Du die oben genannten allgemeinen Regeln an.

*   **Exponentialfunktion:** 
    Die Ableitung der Exponentialfunktion ist:
    *   $f(x) = e^x \implies f'(x) = e^x$
*   **Natürlicher Logarithmus:** Die Ableitung des natürlichen Logarithmus ist:
    *   $f(x) = \ln(x) \implies f'(x) = \frac{1}{x}$
*   **Trigonometrische Funktionen:** Die Ableitungen der trigonometrischen Funktionen sind:
    *   $f(x) = \sin(x) \implies f'(x) = \cos(x)$
    *   $f(x) = \cos(x) \implies f'(x) = -\sin(x)$

# Ableitung berechnen

Um die Ableitung einer beliebigen Funktion zu berechnen müssen wir eventuell mehrere der obigen Regeln kombinieren, also betrachten wir zuerst alle nicht trivialen Regeln einzeln bevor wir sie kombinieren.

    *   $f(x) = \sin(x) \implies f'(x) = \cos(x)$
    *   $f(x) = \cos(x) \implies f'(x) = -\sin(x)$

# Ableitung berechnen

Die Bibliothek `sympy` ist derart ausgefeilt, dass `sympy.diff` eigentlich alle Formen von Ableitung in der Lage ist zu berechnen.
Das heißt der folgende Block reicht meist bereits um die gewünschte Ableitung zu bestimmen:

```{pyodide-python}
import sympy

#Gib hier eine beliebige Funktion ein
x=sympy.symbols('x')
f=x**4+27*x**2-50

print("Die 1.Ableitung der Funktion ist:",sympy.diff(f,x))

```

## Aufgabe zum Ableitungen berechnen

Da dieses Kapitel durch die Funktion `sympy.diff` recht einfach ist, eine schwierige Aufgabe!  

Erstelle einen Code, welcher nicht nur die erste, sondern auch die zweite und dritte Ableitung einer beliebigen Funktion bestimmt.   
Versuche hierbei den Code so **effizient** wie möglich zu schreiben.  
D.h. nur weil Du einen funktionierenden Code hast, heißt das nicht, dass er effizient ist.  
Probier Dich ein bisschen aus.  
_Denk dabei daran, dass es auch eine passende Ausgabe geben sollte._

```{pyodide-python}


```

Nachdem Du jetzt einen Code zum Ableitungen bestimmen hast, betrachten wir, was wir an den Ableitungen erkennen können.
Als nächstes sei **[Monotonieverhalten untersuchen](monotonieverhalten.qmd)** empfohlen.
